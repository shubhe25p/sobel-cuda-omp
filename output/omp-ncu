==PROF== Connected to process 2128834 (/pscratch/sd/s/shubhp/sobel-cuda-omp/build/sobel_cpu_omp_offload)
==PROF== Profiling "nvkernel__Z18do_sobel_filteri..." - 0: 0%....50%....100% - 13 passes
 Read data from the file ../data/zebra-gray-int8-4x 
 Elapsed time is : 8.31989 
 Wrote the output file ../data/processed-raw-int8-4x-omp-gpu.dat 
==PROF== Disconnected from process 2128834
[2128834] sobel_cpu_omp_offload@127.0.0.1
  nvkernel__Z18do_sobel_filteringPfS_ii_F1L103_2, 2023-Nov-05 23:40:06, Context 1, Stream 13
    Section: Command line profiler metrics
    ---------------------------------------------------------------------- --------------- ------------------------------
    dram__throughput.avg.pct_of_peak_sustained_elapsed                                   %                           1.00
    gpu__time_duration.avg                                                         msecond                          19.08
    smsp__cycles_active.avg.pct_of_peak_sustained_elapsed                                %                          36.33
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           1.22
    SM Frequency                                                             cycle/usecond                         765.22
    Elapsed Cycles                                                                   cycle                     14,603,885
    Memory [%]                                                                           %                           9.34
    DRAM Throughput                                                                      %                           1.00
    Duration                                                                       msecond                          19.08
    L1/TEX Cache Throughput                                                              %                          25.20
    L2 Cache Throughput                                                                  %                           7.00
    SM Active Cycles                                                                 cycle                   5,412,437.02
    Compute (SM) [%]                                                                     %                          13.68
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel grid is too small to fill the available resources on this device, resulting in only 0.0 full      
          waves across all SMs. Look at Launch Statistics for more details.                                             

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        128
    Function Cache Configuration                                                                  cudaFuncCachePreferNone
    Grid Size                                                                                                          41
    Registers Per Thread                                                   register/thread                             52
    Shared Memory Configuration Size                                                 Kbyte                          32.77
    Driver Shared Memory Per Block                                             Kbyte/block                           1.02
    Dynamic Shared Memory Per Block                                             byte/block                              0
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                          5,248
    Waves Per SM                                                                                                     0.04
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   The grid for this launch is configured to execute only 41 blocks, which is less than the GPU's 108            
          multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel      
          concurrently with other workloads, consider reducing the block size to have at least one block per            
          multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the    
          Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model)            
          description for more details on launch configurations.                                                        

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             32
    Block Limit Registers                                                            block                              9
    Block Limit Shared Mem                                                           block                             32
    Block Limit Warps                                                                block                             16
    Theoretical Active Warps per SM                                                   warp                             36
    Theoretical Occupancy                                                                %                          56.25
    Achieved Occupancy                                                                   %                           6.13
    Achieved Active Warps Per SM                                                      warp                           3.92
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (56.2%) is limited by the number of required registers The difference     
          between calculated theoretical (56.2%) and measured achieved occupancy (6.1%) can be the result of warp       
          scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between    
          warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide           
          (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on           
          optimizing occupancy.                                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.04
    Branch Instructions                                                               inst                     20,257,538
    Branch Efficiency                                                                    %                          85.84
    Avg. Divergent Branches                                                                                      4,096.89
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced global accesses resulting in a total of 416120780 excessive sectors (85% of the   
          total 489394778 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source      
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional      
          information on reducing uncoalesced device memory accesses.                                                   

